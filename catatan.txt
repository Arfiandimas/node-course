Generate pakage.json = npm init (agar bisa install pakage dari npm)

Pakage NPM:
- chalk : npm i chalk = untuk mewarnai output di terminal -> chalk.white.bgGreen.bold('Success!')
- validator : npm i validator = untuk memvalidasi url, email, dll -> validator.isURL('barjono.com')
- nodemon : sudo npm install -g nodemon = auto re-run program saat di save(ctrl+save) dan -g untuk install secara global -> nodemon app.js(untuk membuat app.js auto re-run)
- yargs : npm i yargs = untuk memparsing argumen menjadi objek agar mudah untuk diolah -> yargs.argv
- request : npm i request = untuk membuat request ya apalagi kalau bakan itu, kasus ini request HTTP-> request('http://www.google.com', function (error, response, body) {
  console.error('error:', error); // Print the error if one occurred
  console.log('statusCode:', response && response.statusCode); // Print the response status code if a response was received
  console.log('body:', body); // Print the HTML for the Google homepage.
});


Catatan Penting:
- Arrow function = () => {}, tidak bekerja saat pemanggilan this. contoh
const event = {
    name: 'Birthday Party',
    printGuestList: () => {
        console.log('Guest list for ' + this.name);
    }
}
output -> Guest list for undefined

- Object property shorthand/penulisan obect singkat dengan naming convection es6
const name = "Arfian"
const userAge = 27
const user = {
    name,
    age: userAge,
    location: "Yogyakarta"
}
console.log(user);

- Object distructuring/mempersingkat menimpan key object ke dalam variabel
    label: 'Macbook Pro 16 inch 2020',
    price: 60000000,
    stock: 1,
    salePrice: undefined,
    rating: 4
}
// const label = product.label
// const stock = product.stock
const {label:productLabel, stock, rating = 5} = product // rating = 5 = default value
console.log(productLabel)
console.log(stock)
console.log(rating)
//cara kedua
const transaction = (type, { label, stock }) => {
    console.log(type, label, stock)
}
transaction('order', product)